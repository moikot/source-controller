name: release
on:
  push:
    tags:
      - 'v*'

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Kustomize
        uses: fluxcd/pkg/actions/kustomize@master

      - name: Get Docker image name
        id: prep
        run: |
          DOCKER_IMAGE=moikot/source-controller:${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Generate release asset
        run: |
          mkdir -p config/release
          cp config/default/* config/release
          cd config/release
          kustomize edit set image fluxcd/source-controller=${{ steps.prep.outputs.docker_image }}
          kustomize build . > source-controller.yaml

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2-build-push
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.prep.outputs.docker_image }}

      - name: Create release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: true
          body: |
            [CHANGELOG](https://github.com/fluxcd/source-controller/blob/master/CHANGELOG.md)

      - name: Upload artifacts
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./config/release/source-controller.yaml
          asset_name: source-controller.yaml
          asset_content_type: text/plain
